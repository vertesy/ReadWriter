% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ReadWriter.R
\name{write.simple.tsv}
\alias{write.simple.tsv}
\title{write.simple.tsv}
\usage{
write.simple.tsv(
  input_df,
  separator = "\\t",
  extension = "tsv",
  filename = substitute(input_df),
  suffix = NULL,
  manual_file_name = NULL,
  manual_directory = NULL,
  row_names = TRUE,
  col_names = NA,
  gzip = FALSE,
  o = FALSE,
  v = TRUE,
  ...
)
}
\arguments{
\item{input_df}{Your data frame with row and column names.}

\item{separator}{Field separator, such as ',' for CSV.}

\item{extension}{e.g., 'tsv'.}

\item{filename}{The base name for the output file. Default: Name of the input data frame.}

\item{suffix}{A suffix added to the filename. Default: NULL.}

\item{manual_file_name}{Specify full filename if you do not want to name it after the variable.}

\item{manual_directory}{Specify the directory where the file should be saved.}

\item{row_names}{Write row names? Default: TRUE.}

\item{col_names}{Write column names? Default: NA, set to TRUE if \code{row_names == FALSE}.}

\item{gzip}{Compress the file after saving? Default: FALSE.}

\item{o}{Open the file after saving? Default: FALSE.}

\item{v}{Print path if verbose? Default: TRUE.}

\item{...}{Additional arguments passed to the kollapse() function used for the file name and to \code{write.table()}.}
}
\description{
Write out a matrix-like R object with row and column names to a file as tab-separated
values (.tsv). The output filename will be either the variable's name or the one you provide. The output
file will be located in the directory specified at the beginning of the script or in your current
working directory. You can pass the path and variable separately (in order); they will be concatenated
to the filename. If \code{col.names = NA} and \code{row.names = TRUE}, a blank column name is added,
which is the convention used for CSV files to be read by spreadsheets.
}
\examples{
YourDataFrameWithRowAndColumnNames <- cbind("A" = rnorm(100), "B" = rpois(100, 8))
rownames(YourDataFrameWithRowAndColumnNames) <- letters[1:NROW(YourDataFrameWithRowAndColumnNames)]
write.simple.tsv(YourDataFrameWithRowAndColumnNames)

}
