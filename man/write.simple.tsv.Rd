% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ReadWriter.R
\name{write.simple.tsv}
\alias{write.simple.tsv}
\title{write.simple.tsv}
\usage{
write.simple.tsv(
  input_df,
  separator = "\\t",
  extension = "tsv",
  filename = substitute(input_df),
  suffix = NULL,
  manual_file_name = NULL,
  manual_directory = NULL,
  row_names = TRUE,
  col_names = NA,
  gzip = FALSE,
  o = FALSE,
  v = TRUE,
  ...
)
}
\arguments{
\item{input_df}{Your Dataframe with row- and column-names}

\item{separator}{Field separator, such as "," for csv}

\item{extension}{e.g.: tsv}

\item{suffix}{A suffix added to the filename, Default: NULL}

\item{manual_file_name}{Specify full filename if you do not want to name it by the variable name.}

\item{row_names}{Write row names? TRUE by default}

\item{col_names}{Write column names? NA by default, TRUE if row_names == FALSE}

\item{gzip}{Compress the file after saving? FALSE by default}

\item{o}{Open the file after saving? FALSE by default}

\item{v}{verbose Print path? Default: TRUE.}

\item{...}{Additional arguments passed to write.table()}
}
\description{
Write out a matrix-like R-object WITH ROW- AND COLUMN- NAMES to a file with as tab separated
values (.tsv). Your output filename will be either the variable's name. The output file will be
located in "OutDir" specified by you at the beginning of the script, or under your current
working directory. You can pass the PATH and VARIABLE separately (in order), they will be
concatenated to the filename. If col.names = NA and row.names = TRUE a blank column name is added,
which is the convention used for CSV files to be read by spreadsheets.
}
\examples{
YourDataFrameWithRowAndColumnNames <- cbind("A" = rnorm(100), "B" = rpois(100, 8))
rownames(YourDataFrameWithRowAndColumnNames) <- letters[1:NROW(YourDataFrameWithRowAndColumnNames)]
write.simple.tsv(YourDataFrameWithRowAndColumnNames)

}
